#pragma kernel CSMain

// Thread group size 
#define thread_group_size_x 10
#define thread_group_size_y 10
#define thread_group_size_z 10

#define group_size_x 10
#define group_size_y 10
#define group_size_z 10

// Structure to store x,y,z position data in. This is used to populate the outputBuffer
struct positionStruct
{
    float3 pos;
};

// Compute Buffers
RWStructuredBuffer<positionStruct> outputBuffer;

[numthreads(thread_group_size_x, thread_group_size_y, thread_group_size_z)]
void CSMain (uint3 grpID : SV_GroupID, uint3 id : SV_DispatchThreadID, uint3 grpTID : SV_GroupThreadID, uint grpIdx : SV_GroupIndex)
{	
    int idx = id.x + (id.y * thread_group_size_x * group_size_x) + (id.z * thread_group_size_x * group_size_y * thread_group_size_y * group_size_z);


    float scale = .5;
 
	float3 pos = (id + grpTID + (grpID * float3(thread_group_size_x,thread_group_size_y,thread_group_size_z)));
	//float3 pos = (id + grpID + (grpTID * float3(thread_group_size_x,thread_group_size_y,thread_group_size_z)));

	//pos -= float3(50.5,50.5,50.5);

    outputBuffer[idx].pos =  pos * scale;
}